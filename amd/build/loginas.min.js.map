{"version":3,"file":"loginas.min.js","sources":["../src/loginas.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * When clicking the login as button, show a modal with a user selector.\n * Selecting a user will log you in as that user.\n *\n * @module     local_loginas/loginas\n * @copyright  2023 Bas Brands <bas@sonsbeekmedia.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Modal from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\n\n/**\n * Manage the display of the embedded video content.\n * @param {string} courseid The course id.\n */\nconst loginAsModal = async(courseid) => {\n\n    const template = {\n        uniqueid: 0,\n        inputname: 'loginas',\n        query: '',\n        searchstring: 'username',\n    };\n\n    const {html} = await Templates.renderForPromise('core/search_input', template);\n\n    const modal = await Modal.create({\n        type: Modal.types.DEFAULT,\n        large: true,\n        title: 'Login As',\n        scrollable: false,\n        templateContext: {\n            classes: ['loginas-modal']\n        },\n        body: html,\n    });\n\n    // Handle hidden event.\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        // Destroy when hidden.\n        modal.destroy();\n    });\n\n    await modal.show();\n\n    const modalBody = modal.getRoot().find('.modal-body');\n\n    const resultsDiv = document.createElement('div');\n    resultsDiv.classList.add('search-results');\n    modalBody[0].appendChild(resultsDiv);\n\n    const input = modal.getRoot().find('input')[0];\n    input.addEventListener('keypress', (event) => {\n        // Listen for enter key.\n        if (event.keyCode === 13) {\n            event.preventDefault();\n            results(input, resultsDiv, courseid);\n        }\n    });\n    // Prevent the input from being submitted.\n    input.addEventListener('submit', (event) => {\n        event.preventDefault();\n        results(input, resultsDiv, courseid);\n    });\n\n    const submitButton = modal.getRoot().find('button[type=\"submit\"]')[0];\n    submitButton.addEventListener('click', (event) => {\n        event.preventDefault();\n        results(input, resultsDiv, courseid);\n    });\n};\n\n/**\n * Show the search results.\n * @param {Node} input The input element.\n * @param {Node} resultsDiv The results div.\n * @param {Number} courseid The course id.\n */\nconst results = (input, resultsDiv, courseid) => {\n    search(input.value).then(async(users) => {\n        // Create the loginas url for each user.\n        users.forEach((user) => {\n            const baseUrl = M.cfg.wwwroot + '/course/loginas.php?id=' + courseid + '&user=' + user.id +\n            '&sesskey=' + M.cfg.sesskey + '&redirect=0';\n            user.loginasurl = baseUrl;\n        });\n        const template = {\n            users: users,\n        };\n        const {html} = await Templates.renderForPromise('local_loginas/loginas', template);\n        resultsDiv.innerHTML = html;\n        if (users.length === 0) {\n            const messageDiv = document.createElement('div');\n            messageDiv.classList.add('alert', 'alert-info', 'my-2');\n            messageDiv.innerHTML = await getString('nousersfound', 'local_loginas');\n            resultsDiv.appendChild(messageDiv);\n        }\n        return '';\n    }).catch((error) => {\n        window.console.log(error);\n    });\n};\n\n// Search for the user.\nconst search = async(query) => {\n    const request = {\n        methodname: 'local_loginas_get_users',\n        args: {\n            query: query,\n        },\n    };\n\n    const response = await Ajax.call([request]);\n    return response[0];\n};\n\n// Return to the real user.\nconst returnToRealUser = async() => {\n    const request = {\n        methodname: 'local_loginas_return_to_real_user',\n        args: {\n            'sesskey': M.cfg.sesskey,\n        },\n    };\n\n    const response = await Ajax.call([request]);\n    return response[0];\n};\n\n/**\n * Login as a user.\n * @param {int} userid The user id.\n */\nconst loginAs = async(userid) => {\n    const request = {\n        methodname: 'local_loginas_login_as',\n        args: {\n            'userid': userid,\n        },\n    };\n\n    const response = await Ajax.call([request]);\n    return response[0];\n};\n\n/**\n * Init the loginas feature.\n * @param {string} courseid The course id.\n * @param {bool} showreturn Show the return to my real user link.\n */\nconst init = async(courseid, showreturn) => {\n    const usermenu = document.querySelector('.usermenu .dropdown-menu');\n    if (!usermenu) {\n        return;\n    }\n    document.addEventListener('click', (event) => {\n        const button = event.target.closest('[data-action=\"loginas\"]');\n        if (button) {\n            event.preventDefault();\n            loginAsModal(courseid);\n        }\n        const returnButton = event.target.closest('[data-action=\"returntorealuser\"]');\n        if (returnButton) {\n            event.preventDefault();\n            returnToRealUser().then(() => {\n                    window.location.reload();\n                return '';\n            }).catch((error) => {\n                window.console.log(error);\n            });\n        }\n        const loginAsButton = event.target.closest('[data-action=\"localloginas\"]');\n        if (loginAsButton) {\n            const userid = loginAsButton.dataset.userid;\n            event.preventDefault();\n            loginAs(userid).then(() => {\n                    window.location.reload();\n                return '';\n            }).catch((error) => {\n                window.console.log(error);\n            });\n\n        }\n    });\n\n    const link = document.createElement('a');\n    link.href = M.cfg.wwwroot + '/local/loginas/index.php?id=' + courseid;\n    link.classList.add('dropdown-item', 'menu-action');\n\n    if (showreturn) {\n        link.dataset.action = 'returntorealuser';\n        link.innerHTML = await getString('returntorealuser', 'local_loginas');\n    } else {\n        link.dataset.action = 'loginas';\n        link.innerHTML = await getString('loginas', 'local_loginas');\n    }\n    const afterItem = usermenu.querySelector('.dropdown-divider');\n    afterItem.parentNode.insertBefore(link, afterItem.nextSibling);\n};\n\nexport default {\n    init: init,\n};"],"names":["results","input","resultsDiv","courseid","search","value","then","async","users","forEach","user","baseUrl","M","cfg","wwwroot","id","sesskey","loginasurl","template","html","Templates","renderForPromise","innerHTML","length","messageDiv","document","createElement","classList","add","appendChild","catch","error","window","console","log","request","methodname","args","query","Ajax","call","init","showreturn","usermenu","querySelector","addEventListener","event","target","closest","preventDefault","uniqueid","inputname","searchstring","modal","Modal","create","type","types","DEFAULT","large","title","scrollable","templateContext","classes","body","getRoot","on","ModalEvents","hidden","destroy","show","modalBody","find","keyCode","loginAsModal","returnToRealUser","location","reload","loginAsButton","userid","dataset","loginAs","link","href","action","afterItem","parentNode","insertBefore","nextSibling"],"mappings":"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"}